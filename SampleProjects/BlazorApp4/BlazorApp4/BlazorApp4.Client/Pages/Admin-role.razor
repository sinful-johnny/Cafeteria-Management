@page "/admin/role"

<div class="admin-page">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h3>Admin</h3>
        </div>
        <ul>
            <li><a href="/admin">User</a></li>
            <li class="selected"><a href="/admin/role">Role</a></li>
        </ul>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <header class="header">
            <div class="header-content">
                <label>Role/All</label>
                <a href="/Account/Login" class="logout-btn">Logout</a>
            </div>
        </header>

        <!-- Search -->
        <div class="search-and-buttons">
            <input type="text" placeholder="Search" bind="@SearchQuery">
            <button style="border:none; outline:none; background-color:transparent;color:#441FCB">New</button>
            <button style="border:none; outline:none; background-color:transparent;color:#DF0728">Delete</button>
            <a style="border:none; outline:none; background-color:transparent;color:#441FCB;text-decoration:none;" href="/admin/role/management">Manage Access</a>
        </div>

        <!-- Table -->
        <div class="table-container">
            <table class="user-table">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" class="checkbox-rounded" value="@selectAllChecked" @onchange="ToggleSelectAll" />
                        </th>
                        <th>STT</th>
                        <th>Role Name</th>
                        <th>Description</th>
                        <th>Users</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var role in PaginatedRoles)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="checkbox-rounded" @bind="role.Selected" @onclick="() => ToggleRowSelection(role)" />
                            </td>
                            <td>@role.Id</td>
                            <td>@role.RoleName</td>
                            <td>@role.Description</td>
                            <td>@role.Users</td>
                            <td>
                                <a href="\ManageRole" style="color:#441FCB; text-decoration:none;">Manager Users</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <div class="item-per-page">
                <span>Rows per page:</span>
                <select @onchange="UpdateRowsPerPage">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                </select>
            </div>
            <div class="choose-page">
                <span>@(TotalRows % RowsPerPage != 0 ? (TotalRows / RowsPerPage + 1) : (TotalRows / RowsPerPage)) page(s)</span>
                <button @onclick="PreviousPage">&lt;</button>
                <span>@CurrentPage</span>
                <button @onclick="NextPage">&gt;</button>
                <span>@(CurrentPage < (TotalRows % RowsPerPage != 0 ? (TotalRows / RowsPerPage + 1) : (TotalRows / RowsPerPage)) ? (CurrentPage + 1) : "")</span>
            </div>
        </div>
    </div>
</div>

@code {
    private bool ShowRoleDropdown { get; set; }
    private bool ShowEmailDropdown { get; set; }
    private bool ShowPhoneDropdown { get; set; }
    private bool ShowLockoutDropdown { get; set; }

    private string SearchQuery { get; set; }

    private int RowsPerPage { get; set; } = 10;
    private int CurrentPage { get; set; } = 1;
    private int TotalRows { get; set; } = 4;

    private List<Role> Roles { get; set; } = new()
    {
        new Role { Id = 1, RoleName = "Admin", Description = "Do shit", Users = 9, TableTypePerm = "Read,Write", CanvasPerm = "Read,Write", 
                    FoodPerm = "Read,Write", OrderPerm = "Read,Write", UserPerm = "Read,Write", RolePerm = "Read,Write" },
        new Role { Id = 2, RoleName = "Customer", Description = "Do shit", Users = 5, TableTypePerm = "No", CanvasPerm = "No",
                    FoodPerm = "No", OrderPerm = "Read", UserPerm = "No", RolePerm = "No" },
        new Role { Id = 3, RoleName = "Staff", Description = "Do shit", Users = 3, TableTypePerm = "Read", CanvasPerm = "Read,Write",
                    FoodPerm = "Read,Write", OrderPerm = "Read,Write", UserPerm = "Read", RolePerm = "No" },
        new Role { Id = 4, RoleName = "Manager", Description = "Do shit", Users = 2, TableTypePerm = "Read,Write", CanvasPerm = "Read,Write",
                    FoodPerm = "Read,Write", OrderPerm = "Read,Write", UserPerm = "Read", RolePerm = "Read" }
    };


    private void ToggleRowSelection(Role role)
    {
        role.Selected = !role.Selected;
    }

    private List<Role> PaginatedRoles => Roles
    .Skip((CurrentPage - 1) * RowsPerPage)
    .Take(RowsPerPage)
    .ToList();

    private List<Role> roles = new List<Role>();
    private bool selectAllChecked = false;

    private void ToggleSelectAll()
    {
        selectAllChecked = !selectAllChecked;
        foreach (var role in PaginatedRoles)
        {
            role.Selected = selectAllChecked;
        }
    }

    private void UpdateRowsPerPage(ChangeEventArgs e)
    {
        RowsPerPage = int.Parse(e.Value.ToString());
        CurrentPage = 1; // Reset to first page
    }

    private void PreviousPage()
    {
        if (CurrentPage > 1) CurrentPage--;
    }

    private void NextPage()
    {
        if (CurrentPage * RowsPerPage < TotalRows) CurrentPage++;
    }

    public class Role
    {
        public int Id { get; set; }
        public string RoleName { get; set; }
        public string Description { get; set; }
        public int Users { get; set; }
        public bool Selected { get; set; }
        public string TableTypePerm { get; set; }
        public string CanvasPerm { get; set; }
        public string FoodPerm { get; set; }
        public string OrderPerm { get; set; }
        public string UserPerm { get; set; }
        public string RolePerm { get; set; }
    }
}


