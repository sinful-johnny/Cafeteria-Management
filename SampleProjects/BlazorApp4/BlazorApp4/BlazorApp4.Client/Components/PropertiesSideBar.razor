@using BlazorApp2.Components
@using Class
@using Class.Auth
@using Class.Services;
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@* @inject FoodListItemService foodListItemsService; *@

<div class="admin-PropertiesBar">
    <div class="Title">
        <h4>Table: @(selectedTable != null ? selectedTable.TableId : "Undefined")</h4>
    </div>
    <div class="CollaspsibleList--container">
        <FoodOnTableCollaspsibleList selectedTable="selectedTable" />
    </div>
    <AuthorizeView Resource="Resource" Policy="ReadWrite">
        <Authorized>
            @if (selectedTable != null && selectedTable.Foods.Count > 0)
            {
                <div class="ClearButton-Container">
                    <button class="ClearButton" @onclick="HandleClearTableClick">Clear the table</button>
                </div>
            }
        </Authorized>
        <NotAuthorized></NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [Parameter] public MenuResource? Resource { get; set; }
    [Parameter] public FoodListItemService? FoodListItemService { get; set; }
    [Parameter] public ITable? selectedTable { get; set; }
    [Parameter] public EventCallback ClearTableFunc { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task HandleClearTableClick() { 
        if (ClearTableFunc.HasDelegate)
        {
            await ClearTableFunc.InvokeAsync(null);
        } 
    }
}
