@page "/"
@using BlazorApp1.Components.Layout;
@using BlazorApp1.Class.Services;
@using BlazorApp1.Class;
@rendermode InteractiveServer
@inject TableListItemsService tableListItemsService;
@inject FoodListItemService foodListItemsService;

<PageTitle>Home</PageTitle>

<div class="Global--Container">
	<Header/>
	<div class="BodyStyle">
		<Navbar />
		<div>
			<BlazorApp1.Components.Components.MainCanvas />
		</div>
		
	</div>
</div>

@code{
	protected override Task OnInitializedAsync()
	{
		List<ITable> tables = new List<ITable>()
		{
			new RectangleTable(-1,"S001",-1,-1,100,100,"unlocked","./public/square.svg", "Rectangle"),
			new CircleTable(-1,"S002", -1, -1, 100, "unlocked", "./public/circle.svg", "Circle")
		};
		tableListItemsService.setItems(
		new List<TableListItem>([
			new TableListItem{
					Id = 1,
					Title = "Table",
					Content = tables
				},
			])
		);

		var food1 = new Food(1, "Pizza", 10, 12.99m, "Available", "path/to/pizza.jpg"); 
		var food2 = new Food(2, "Burger", 15, 8.99m, "Available", "path/to/burger.jpg"); 
		var food3 = new Food(3, "Pasta", 20, 10.50m, "Available", "path/to/pasta.jpg"); // Creating sample FoodListItem objects 
		var foodListItem1 = new FoodListItem { 
			Id = 1, Title = "Main Courses", 
			Content = new List<Food> { food1, food2, food3 } 
		}; 
		var foodListItem2 = new FoodListItem { 
			Id = 2, Title = "Desserts", Content = new List<Food> { food1 } // Example with single item 
		};

		foodListItemsService.setItems(
			new List<FoodListItem> { foodListItem1, foodListItem2 }
		);

		return base.OnInitializedAsync();
	}
}
