@page "/"
@using BlazorApp2.Components;
@using System.Text.Json;
@using Class.Services;
@using Class.Converter;
@using Class;
@inject TableListItemsService tableListItemsService;
@inject FoodListItemService foodListItemsService;

<PageTitle>Home</PageTitle>

<div class="Global--Container">
	<Header @bind-selectedPage="@selectedPage" SaveFunction="@Save"/>
	<div class="BodyStyle">
		<Navbar selectedPage="@selectedPage" />
		<div>
			<MainCanvas @bind-rectangles="rectangles" @bind-selectedTable="selectedTable" Log="@log" />
		</div>
		@if (selectedTable != null)
		{
			<PropertiesSideBar selectedTable="selectedTable" ClearTableFunc="@clearTable"/>
		}
		
	</div>
</div>

@code{
	public List<ITable>? rectangles = null;
	public ITable? selectedTable = null;
	private string selectedPage = "Table";

	[Inject]
	public IJSRuntime? JS { get; set; }

	public void clearTable()
	{
		if(selectedTable != null)
		{
			selectedTable.Foods.Clear();
		}
	}

	public void Save()
	{
		//string tablesJSON = JsonSerializer.Serialize(rectangles);
		if(rectangles != null)
		{
			string tablesJSON = TablesToDtoConverter.ConvertToJson(rectangles);
			if(JS != null)
			{
				Console.WriteLine(tablesJSON);
				JS.InvokeVoidAsync("canvasInterop.logJSONObject", tablesJSON);
			}
			
		}
	}

	public void log()
	{
		Console.WriteLine(selectedTable);
	}

	// private void OnSelectedPage(string page)
	// {
	// 	selectedPage = page;
	// }

	protected override Task OnInitializedAsync()
	{
		List<Shape> tables = new List<Shape>()
		{
			new Shape("S001","./public/square.svg","Rectangle",100,100, 0, "rectangle"),
			new Shape("S002","./public/circle.svg","Circular",0, 0, 100, "circle")
		};
		tableListItemsService.setItems(
		new List<ShapeListItem>([
			new ShapeListItem{
					Id = 1,
					Title = "Table",
					Content = tables
				},
			])
		);

		var food1 = new Food(1, "Pizza", 10, 12.99m, "Available", "path/to/pizza.jpg"); 
		var food2 = new Food(2, "Burger", 15, 8.99m, "Available", "path/to/burger.jpg"); 
		var food3 = new Food(3, "Pasta", 20, 10.50m, "Available", "path/to/pasta.jpg"); // Creating sample FoodListItem objects 
		var food4 = new Food(4, "Deez Nuts", 20, 10.50m, "Available", "path/to/nuts.jpg");

		var foodListItem1 = new FoodListItem { 
			Id = 1, Title = "Main Courses", 
			Content = new List<Food> { food1, food2, food3 } 
		}; 
		var foodListItem2 = new FoodListItem { 
				Id = 2,
				Title = "Desserts",
				Content = new List<Food> { food4 } // Example with single item
		};

		foodListItemsService.setItems(
			new List<FoodListItem> { foodListItem1, foodListItem2 }
		);

		return base.OnInitializedAsync();
	}
}
